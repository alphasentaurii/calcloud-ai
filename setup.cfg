[metadata]
name = calcloudML
description = Machine learning dashboard for Calcloud
long_description = Machine learning dashboard for Calcloud
long_description_content_type = text/plain
keywords = astronomy, astrophysics
author = Ru Kein
author_email = rkein@stsci.edu
license = BSD
license_file = LICENSE.rst
url = https://github.com/alphasentaurii/calcloud-ml-dashboard
edit_on_github = False
github_project = alphasentaurii/calcloud-ml-dashboard
classifiers =
    Intended Audience :: Science/Research
    License :: OSI Approved :: BSD License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: Implementation :: CPython
    Topic :: Scientific/Engineering :: Astronomy
    Topic :: Scientific/Engineering :: Physics

[options]
packages = find:
zip_safe = False
setup_requires =
    setuptools_scm
install_requires =
    numpy>=1.18.5
    pandas>=1.2.5
    plotly>=5.0.0
    dash>=1.20.0
    dash-core-components>=1.16.0
    dash-html-components>=1.1.3
    dash-cytoscape>=0.2.0
    Flask>=2.0.1
    tensorflow>=2.4.1


python_requires = >=3.7

[options.extras_require]
test =
    pytest-astropy-header
    pytest-doctestplus
docs =
    sphinx-automodapi
    stsci_rtd_theme

[options.package_data]
calcloudML = data/*

[entry_points]
calcloudML = calcloudML

[tool:pytest]
minversion = 5.0
norecursedirs = build docs/_build
astropy_header = True
doctest_plus = enabled

[flake8]
max-line-length = 79

[coverage:run]
source = calcloudML
omit =
    calcloudML/tests/*
    calcloudML/version*
    */calcloudML/tests/*
    */calcloudML/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_
